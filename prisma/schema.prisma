generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]

}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
  referentialIntegrity = "prisma"
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  folders Folder[]
  posts   Post[]
  tags    Tag[]
  memos   Memo[]
}

model Folder {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  posts     Post[]
  user_id   Int
  user      User     @relation(fields: [user_id], references: [id])

}

model Memo {
  id      Int    @id @default(autoincrement())
  body    String
  user_id Int
  user    User   @relation(fields: [user_id], references: [id])

}

model Post {
  id        Int      @id @default(autoincrement())
  name      String
  url       String
  createdAt DateTime @default(now())
  tags      Tag[]    @relation("_PostsOnTags")
  folder_id Int
  folder    Folder   @relation(fields: [folder_id], references: [id])
  user_id   Int
  user      User     @relation(fields: [user_id], references: [id])

}

model Tag {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  posts     Post[]   @relation("_PostsOnTags")
  user_id   Int
  user      User     @relation(fields: [user_id], references: [id])


}

// model PostsOnTags {
//   createdAt DateTime @default(now())
//   post      Post     @relation(fields: [post_id], references: [id])
//   post_id   Int
//   tag       Tag      @relation(fields: [tag_id], references: [id])
//   tag_id    Int

//   @@id([post_id, tag_id])
// }
